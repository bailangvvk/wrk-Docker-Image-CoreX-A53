# .github/workflows/build-wrk-arm64.yml
name: Build wrk with LuaJIT for ARM64 and Push Docker Image

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: |
            bailangvvking/wrk:arm64
            bailangvvking/wrk:arm64-${{ steps.date.outputs.date }}
          build-args: |
            TARGETARCH=arm64

# Dockerfile (in project root)
# ----------------------------
# syntax=docker/dockerfile:1.4
FROM --platform=linux/arm64 ubuntu:22.04 AS builder

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y build-essential git curl make \
    gcc-aarch64-linux-gnu g++-aarch64-linux-gnu perl && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /src

# 获取 wrk 和 LuaJIT
RUN git clone https://github.com/wg/wrk.git . && \
    mkdir -p ThirdParty && \
    git clone -b v2.1 https://github.com/LuaJIT/LuaJIT.git ThirdParty/LuaJIT-2.1

# 构建 LuaJIT for ARM64
WORKDIR /src/ThirdParty/LuaJIT-2.1
RUN make clean || true && \
    make CROSS=aarch64-linux-gnu- TARGET=arm64 HOST_CC=gcc

# 构建 wrk
WORKDIR /src
RUN make clean || true && \
    make CC=aarch64-linux-gnu-gcc LUAJIT=ThirdParty/LuaJIT-2.1/src/luajit

# 生成最终镜像
FROM --platform=linux/arm64 scratch AS final
COPY --from=builder /src/wrk /usr/bin/wrk
ENTRYPOINT ["/usr/bin/wrk"]
